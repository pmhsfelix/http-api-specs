{
  "name": "HTTP API Specs",
  "tagline": "RFCs and other specifications for HTTP APIs",
  "body": "# Introduction\r\n\r\nA collection of RFCs and other specifications useful when designing and implementing HTTP APIs.\r\n\r\n# Specifications\r\n\r\n## The HTTP protocol\r\n\r\n### [Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content](https://tools.ietf.org/html/rfc7231)\r\n\r\nFrom the abstract\r\n> The Hypertext Transfer Protocol (HTTP) is a stateless application-\r\n   level protocol for distributed, collaborative, hypertext information\r\n   systems.  This document **defines the semantics of HTTP/1.1 messages,\r\n   as expressed by request methods, request header fields, response\r\n   status codes, and response header fields, along with the payload of\r\n   messages (metadata and body content) and mechanisms for content\r\n   negotiation**.\r\n\r\nMy primary source of information for the semantics of the HTTP main components, such as request methods, status codes and headers. \r\n\r\n\r\n\r\n## Links\r\n\r\n### [Web Linking](https://tools.ietf.org/html/rfc5988)\r\n\r\nFrom the abstract\r\n> This document specifies **relation types for Web links**, and defines a\r\n   registry for them.  It also defines the use of such links in HTTP\r\n   headers with the **Link header field**.\r\n\r\nThis specification defines:\r\n* what is a link and what are its constituents\r\n* a set of standard link relations\r\n* the `Link` header to add links at the HTTP message level\r\n\r\n### [IANA Link Relation registry](http://www.iana.org/assignments/link-relations/link-relations.xhtml) \r\n\r\nThe IANA registry with all the standard link relations.\r\nThis is the place to go when selecting or creating link relations.\r\n\r\n## Security\r\n\r\n### [Hypertext Transfer Protocol (HTTP/1.1): Authentication](https://tools.ietf.org/html/rfc7235)\r\n\r\nFrom the abstract\r\n> This document defines the HTTP Authentication framework.\r\n\r\nMy primary source of information for the HTTP authentication and authorization elements, such as the `WWW-Authenticate` and `Authorization` headers as well as the `401` and `403` status codes.\r\n\r\n### [The OAuth 2.0 Authorization Framework](https://tools.ietf.org/html/rfc6749)\r\n\r\nFrom the abstract\r\n> The OAuth 2.0 authorization framework **enables a third-party\r\n   application to obtain limited access to an HTTP service, either on\r\n   behalf of a resource owner by orchestrating an approval interaction\r\n   between the resource owner and the HTTP service, or by allowing the\r\n   third-party application to obtain access on its own behalf**\r\n\r\n*The* OAuth 2.0 framework main specification, describing how a client application obtains access tokens to access a HTTP API, using one of the four standard flows: Authorization Code Grant, Implicit, Resource Owner Password Credentials, and Client Credentials.\r\n\r\n### [The OAuth 2.0 Authorization Framework: Bearer Token Usage](https://tools.ietf.org/html/rfc6750)\r\n\r\nFrom the abstract\r\n> This specification describes how to use bearer tokens in HTTP\r\n   requests to access OAuth 2.0 protected resources\r\n\r\nA rather short specification defined the proper way to attach a bearer token to a HTTP request message.\r\n\r\n### [IANA HTTP Authentication Schemes registry](http://www.iana.org/assignments/http-authschemes/http-authschemes.xhtml)\r\n\r\nThe IANA registry all all the standard authentication/authorization schemes, namely: `Basic` and `Bearer`.\r\n\r\n## Syntax\r\n\r\n### [Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing](https://tools.ietf.org/html/rfc7230)\r\n\r\nFrom the abstract\r\n> This document provides an overview of HTTP architecture and\r\n   its associated terminology, defines the \"http\" and \"https\" Uniform\r\n   Resource Identifier (URI) schemes, **defines the HTTP/1.1 message\r\n   syntax and parsing requirements**, and describes related security\r\n   concerns for implementations\r\n\r\nUseful for understanding syntax aspects, such as header encodings.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}